server:
  port: ${SERVER_PORT}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        default_schema: ${SPRING_DATA_DEFAULT_SCHEMA}

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: ${SPRING_DATA_DEFAULT_SCHEMA}

security:
  jwt:
    secret: ${SECURITY_JWT_SECRET}
    expiration: ${SECURITY_JWT_EXPIRATION}
    refreshExpiration: ${SECURITY_JWT_REFRESH_EXPIRATION}

cache:
  caffeine:
    expire-after-write: ${CACHE_CAFFEINE_EXPIRE_AFTER_WRITE} # в минутах
    maximum-size: ${CACHE_CAFFEINE_MAXIMUM_SIZE}

logging:
  level:
    lissa.trading.auth.service.aspect: ${LOGGING_LEVEL}

integration:
  rest:
    auth-service-url: ${AUTH_SERVICE_URL}
    user-service:
      url: ${USER_SERVICE_URL}
      token: ${USER_SERVICE_INTERNAL_TOKEN}
    tinkoff-api-service:
      url: ${TINKOFF_API_SERVICE_URL}
      token: ${TINKOFF_API_SERVICE_INTERNAL_TOKEN}

  rabbit:

springdoc:
  swagger-ui:
    path: ${SWAGGER_PATH}